/*Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.*/

function sumFibs(num) {
  let fibArr = [];
  fibArr[0] = 1;
  fibArr[1] = 1;
  for(let i =1; fibArr[i]<num; i++){
    fibArr[i+1] = fibArr[i] + fibArr[i-1];
  }
  let oddFibArr = [];
  for(let i = 0; i<fibArr.length; i++){
    if(fibArr[i] % 2 !== 0 && fibArr[i] <= num){
      oddFibArr.push(fibArr[i]);
    }
  }
  let oddFibSum = 0;
  for(let i =0; i<oddFibArr.length; i++){
    oddFibSum += oddFibArr[i];
  }
  return oddFibSum;
}

console.log(sumFibs(4));

/*Provided answer from freecodecamp is much cleaner:
function sumFibs(num) {
  let prevNumber = 0;
  let currNumber = 1;
  let result = 0;
  while (currNumber <= num) {
    if (currNumber % 2 !== 0) {
      result += currNumber;
    }
    currNumber += prevNumber;
    prevNumber = currNumber - prevNumber;
  }

  return result;
}

// test here
sumFibs(4);
*/
