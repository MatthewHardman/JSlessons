/*Design a cash register drawer function checkCashRegister() that accepts purchase price as the first argument (price), payment as the second argument (cash), and cash-in-drawer (cid) as the third argument.

cid is a 2D array listing available currency.

The checkCashRegister() function should always return an object with a status key and a change key.

Return {status: "INSUFFICIENT_FUNDS", change: []} if cash-in-drawer is less than the change due, or if you cannot return the exact change.

Return {status: "CLOSED", change: [...]} with cash-in-drawer as the value for the key change if it is equal to the change due.

Otherwise, return {status: "OPEN", change: [...]}, with the change due in coins and bills, sorted in highest to lowest order, as the value of the change key.*/

function checkCashRegister(price, cash, cid) {
  let cashInDrawer = cid.reverse().map(bill => [bill[0], bill[1]*100]);
  let totalMoney = 0;
  let change = [
  ["ONE HUNDRED", 0],
  ["TWENTY", 0],
  ["TEN", 0],
  ["FIVE", 0],
  ["ONE", 0],
  ["QUARTER", 0],
  ["DIME", 0],
  ["NICKEL", 0],
  ["PENNY", 0]
  ];
  const bills = [10000, 2000, 1000, 500, 100, 25, 10, 5, 1];
  for(let i in cashInDrawer){
    totalMoney = totalMoney + cashInDrawer[i][1]
  }
  let amountDue = (cash - price)*100;
  const unchangingAmountDue = amountDue;
  
  if(totalMoney < amountDue){
    return {status: "INSUFFICIENT_FUNDS", change:[]};
  }

  for (let i in bills){
    
    while(amountDue >= bills[i] && cashInDrawer[i][1] > 0){
      amountDue = amountDue - bills[i];
      cashInDrawer[i][1] = cashInDrawer[i][1] - bills[i];
      totalMoney = totalMoney - bills[i];
      change[i][1] = change[i][1] + bills[i];      
      }
  }

  let changeSum = 0;
  for (let i in change){
    changeSum = changeSum + change[i][1];
  }

  if(changeSum < unchangingAmountDue){
    return {status: "INSUFFICIENT_FUNDS", change:[]};
  }
  change = change
  .map(bill => [bill[0], bill[1]/100]);
  
  
  if (totalMoney === 0){
    change = change.reverse();
    return {status: 'CLOSED', change};
  }
  change = change.filter(bill => bill[1] !== 0)
  return {status: "OPEN", change};
}

console.log(checkCashRegister(19.5, 20, [["PENNY", 0.5], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 0], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]]));
